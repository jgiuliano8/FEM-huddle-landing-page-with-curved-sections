/****************************/
/*    Table of Contents     */
/*                          */
/* Global Styles --- ln16   */
/* Typography ------ ln42   */
/* Links ----------- ln86   */
/* Layout ---------- ln110  */
/* Form ------------ ln336  */
/* Components ------ ln361  */
/* Media Queries &          */
/* Hover,Focus,Active       */
/* States ---------- ln402  */
/*                          */
/****************************/

/* ================
    Global Styles
   ================ */

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-size: 12px;
}

body {
  margin: 0;
  padding: 0;
  font-family: "Open Sans", Arial, Helvetica, sans-serif;
  font-weight: 400;
}

img {
  display: block;
  max-width: 100%;
}

/* ============
    Typography
   ============ */

h1,
h2 {
  margin: 0 auto;
  font-family: Poppins, Arial, Helvetica, sans-serif;
  font-weight: 700;
}

h1 {
  font-size: 2.5rem;
}

h2 {
  font-size: 1.5rem;
}

h1,
.section__title,
.section__text,
.intro {
  text-align: center;
}

.section__text,
.intro {
  line-height: 1.6;
}

.stats__number {
  font-size: 5em;
  font-weight: 700;
}

.contact-text {
  vertical-align: middle;
}

.phone-contact,
.email-contact,
small {
  font-size: 10px;
}

.fab {
  font-size: 18px;
}

/* =======
    Links
   ======= */

/* Make attribution links inline-block so they can rotate on hover. */

.attribution__a {
  display: inline-block;
}

.attribution__a:link {
  color: lightgoldenrodyellow;
  text-decoration: none;
  transition: transform 250ms;
}

.attribution__a:visited {
  color: orange;
}

.footer__a {
  text-decoration: none;
}

/* ========
    Layout
   ======== */

/* The header is flexbox throughout the device widths.

   The sections start out as flexbox. The middle sections
   switch to grid with an auto-flow of column when the
   device width reaches 768px. This puts the text and images
   next to each other instead of on top. I used grid instead 
   of just switching the flex-direction to row/row-reverse
   because the SVGs resized better and it was easier to get
   even columns that way.
   
   The footer is grid throughout the device widths. I used
   this because the grid-areas eased layout maneuvers.
   
   The two form elements are flex and I just switch the
   flex direction at 768px to move them from on top of each
   other to next to each other.

*/

header {
  max-width: 90%;
  display: flex;
  justify-content: space-between;
  margin: 2em auto 10em;
}

.header__logo {
  max-width: 85px;
}

section {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 3em 2em;
}

/* Because of the mobile design spec, the flex-direction
   needs to be reversed to get the images above the
   text */

.section--grow,
.section--users {
  flex-direction: column-reverse;
}

.section__img {
  padding: 6em;
}

.section__div {
  padding-top: 3em;
}

@media screen and (min-width: 768px) {
  .stats,
  .section--flow,
  .section--grow,
  .section--users {
    display: grid;
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
    justify-items: center;
  }

  .section__img {
    padding: 0;
  }

  .section__div {
    padding: 0;
  }
}

.intro,
.section__text {
  max-width: 225px;
}

.intro {
  margin: 1em auto;
}

.hero__img {
  margin: 5em auto;
}

.stats__ul {
  margin: 3em auto;
  padding: 0;
  list-style: none;
}

.stats__number {
  margin: 0;
}

.stats__text {
  font-size: 1.2rem;
  color: #808080;
  margin: 0 0 2em 0;
  text-align: center;
}

.stats__img {
  max-width: 25px;
}

.section--grow,
.section--users {
  background-color: hsl(207, 100%, 98%);
}

.quasi-footer {
  justify-content: center;
  align-items: center;
  padding: 9em 0;
}

.newsletter {
  grid-area: newsletter;
}

.contact {
  grid-area: contact;
}

.attribution {
  grid-area: attribution;
}

footer {
  display: grid;
  grid-template-columns: 2em 1fr 1fr 2em;
  grid-template-rows: auto;
  grid-template-areas:
    ". newsletter newsletter ."
    ". contact contact ."
    ". attribution attribution .";

  align-items: start;
  row-gap: 6em;
  padding-top: 5em;
  padding-bottom: 1em;
  background-color: #00252e;
  color: white;
}

@media screen and (min-width: 375px) {
  footer {
    grid-template-areas:
      ". contact newsletter ."
      ". attribution attribution .";
    column-gap: 1em;
  }
}

.social {
  margin: 3.5em 0;
}

.newsletter__subtitle {
  text-align: left;
}

.newsletter__p,
.contact__p {
  max-width: 250px;
  line-height: 1.6;
}

.newsletter__p {
  margin-bottom: 2.5em;
}

.contact__p {
  margin-bottom: 3.5em;
}

.footer__logo {
  max-width: 200px;
}

.phone-contact {
  margin-bottom: 1.5em;
}

.phone-contact__img,
.email-contact__img {
  display: inline-block;
  margin-right: 1em;
  vertical-align: middle;
}

.fab + .fab {
  margin-left: 0.75em;
}

/* Class created to fix pixel rounding weirdness
  between SVGs and surrounding divs/sections. If
  rendered SVG came to 72.3 height it would leave
  a white line between the SVG and the adjacent
  div. Bad scene. Making the SVG 1.1 times higher
  and then making overflow visible fixed that.
  The scale in the X direction needed to be 1
  to prevent side-scrolling.
  */

.pixel-fix {
  transform: scale(1, 1.1);
  overflow: visible;
}

/* At wider screen sizes, SVGs do not need to be scaled
   in the Y direction as much */

@media screen and (min-width: 768px) {
  .pixel-fix {
    transform: scale(1, 1.05);
  }
}

/* ======
    Form 
   ====== */

.subscription-form {
  display: flex;
  flex-direction: column;
}

.email-input {
  width: 100%;
  padding: 0.5em;
  border-radius: 3px;
}

@media screen and (min-width: 768px) {
  .newsletter {
    width: 100%;
  }

  .email-input {
    max-width: 300px;
  }
}

/* ====================
    Buttons/Components
   ==================== */

.btn {
  text-decoration: none;
  box-shadow: 0 2px 5px 2px rgba(150, 150, 150, 0.3);
}

.btn--light {
  align-self: center;
  border-radius: 50px;
  padding: 0.5em 2.25em;
  color: hsl(322, 100%, 66%);
  border: 1px solid hsl(322, 100%, 66%);
  background-color: white;
}

.btn--CTA,
.btn--form-submit {
  color: white;
  background-color: hsl(322, 100%, 66%);
  border: none;
}

.btn--CTA {
  display: block;
  width: 200px;
  margin: 3.5em auto;
  padding: 1.25em 3em;
  border-radius: 50px;
  text-align: center;
}

.btn--form-submit {
  align-self: flex-end;
  border-radius: 3px;
  padding: 0.75em 2.5em;
  margin-top: 0.75em;
}

/* ===============
    Media Queries
          +
    Hover, Focus
    and Active
    States
   =============== */

@media screen and (min-width: 768px) {
  .newsletter {
    justify-self: start;
  }
  .subscription-form {
    flex-direction: row;
  }

  .btn--form-submit {
    margin: 0 0.75em;
  }
}

/* Grouped all active states for mobile
   devices */

.btn--light:active {
  color: hsl(321, 100%, 78%);
  border-color: hsl(321, 100%, 78%);
}

.btn--accent:active {
  background-color: hsl(321, 100%, 78%);
}

.attribution__a:active {
  transform: rotate(7deg);
  color: navajowhite;
}

.fab:active {
  color: lightskyblue;
}

/* Put hover and focus states in a media query for devices
   with a mouse */

@media screen and (pointer: fine) {
  .btn--light:hover,
  .btn--light:focus {
    color: hsl(321, 100%, 78%);
    border-color: hsl(321, 100%, 78%);
  }

  .btn--CTA:hover,
  .btn--CTA:focus,
  .btn--form-submit:hover,
  .btn--form-submit:focus {
    background-color: hsl(321, 100%, 78%);
  }

  .attribution__a:hover,
  .attribution__a:focus {
    transform: rotate(7deg);
    color: navajowhite;
  }

  .fab:hover,
  .fab:focus {
    color: lightskyblue;
    cursor: pointer;
  }
}
